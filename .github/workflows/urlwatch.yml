# name: urlwatch

# on:
#   schedule:
#     - cron: '*/30 * * * *'    # 30分おき（UTC）
#   workflow_dispatch:         # 手動実行ボタン

# jobs:
#   run:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.12'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade urlwatch keyrings.alt playwright
#           playwright install chromium

#       # - name: Run urlwatch
#       #   env:
#       #     URLWATCH_EMAIL_USER: ${{ secrets.MAIL_USER }}
#       #     URLWATCH_EMAIL_PASS: ${{ secrets.MAIL_PASS }}
#       #   run: |
#       #     # 1) 設定ディレクトリを作成
#       #     mkdir -p ~/.config/urlwatch

#       #     # 2) 監視リストをコピー
#       #     cp urls.yaml ~/.config/urlwatch/urls.yaml

#       #     # 3) report: 形式で設定ファイルを echo で生成
#       #     echo 'report:'                                                    > ~/.config/urlwatch/urlwatch.yaml
#       #     echo '  email:'                                                   >> ~/.config/urlwatch/urlwatch.yaml
#       #     echo '    enabled: true'                                          >> ~/.config/urlwatch/urlwatch.yaml
#       #     echo '    method: smtp'                                           >> ~/.config/urlwatch/urlwatch.yaml
#       #     echo '    from:    "'"${URLWATCH_EMAIL_USER}"'"'                  >> ~/.config/urlwatch/urlwatch.yaml
#       #     echo '    to:      "'"${URLWATCH_EMAIL_USER}"'"'                  >> ~/.config/urlwatch/urlwatch.yaml
#       #     echo '    smtp:'                                                  >> ~/.config/urlwatch/urlwatch.yaml
#       #     echo '      host:           smtp.gmail.com'                       >> ~/.config/urlwatch/urlwatch.yaml
#       #     echo '      auth:           true'                                 >> ~/.config/urlwatch/urlwatch.yaml
#       #     echo '      port:           587'                                  >> ~/.config/urlwatch/urlwatch.yaml
#       #     echo '      starttls:       true'                                >> ~/.config/urlwatch/urlwatch.yaml
#       #     echo "      user:           ${URLWATCH_EMAIL_USER}"              >> ~/.config/urlwatch/urlwatch.yaml
#       #     echo "      insecure_password: ${URLWATCH_EMAIL_PASS}"           >> ~/.config/urlwatch/urlwatch.yaml

#       #     # 4) テスト送信で SMTP 動作を確認
#       #     urlwatch --config ~/.config/urlwatch/urlwatch.yaml
#       # - name: Cache urlwatch DB
#       #   uses: actions/cache@v4
#       #   with:
#       #     # URLWatch の差分DB は ~/.cache/urlwatch/db.sqlite3 に入るので、
#       #     # ディレクトリ全体をキャッシュします
#       #     path: ~/.cache/urlwatch
#       #     # キャッシュキーは安定的な文字列にし、
#       #     # restore-keys で“同じプレフィックス”を指定すると
#       #     # 最新のキャッシュが必ず戻ってきます
#       #     key: urlwatch-db-${{ runner.os }}
#       #   restore-keys: |
#       #     urlwatch-db-

#       # - name: Run urlwatch with static config
#       #   env:
#       #     URLWATCH_EMAIL_USER: ${{ secrets.MAIL_USER }}
#       #     URLWATCH_EMAIL_PASS: ${{ secrets.MAIL_PASS }}
#       #   run: |
#       #     # 設定ディレクトリを作成
#       #     mkdir -p ~/.config/urlwatch

#       #     # 雛形をコピー
#       #     cp urlwatch.yaml ~/.config/urlwatch/urlwatch.yaml

#       #     # プレースホルダーを環境変数で置き換え
#       #     sed -i \
#       #       -e 's|\${URLWATCH_EMAIL_USER}|'"$URLWATCH_EMAIL_USER"'|g' \
#       #       -e 's|\${URLWATCH_EMAIL_PASS}|'"$URLWATCH_EMAIL_PASS"'|g' \
#       #       ~/.config/urlwatch/urlwatch.yaml

#       #     # 監視リストをコピー
#       #     cp urls.yaml ~/.config/urlwatch/urls.yaml

#       #     # 実行（差分あるものだけメール送信）
#       #     urlwatch --config ~/.config/urlwatch/urlwatch.yaml
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade urlwatch

#       - name: Cache urlwatch DB
#         uses: actions/cache@v4
#         with:
#           # ~ が展開されないので必ず $HOME を使います
#           path: ${{ env.HOME }}/.cache/urlwatch
#           key: urlwatch-db-${{ runner.os }}
#           restore-keys: |
#             urlwatch-db-

#       - name: Run urlwatch with static config
#         env:
#           URLWATCH_EMAIL_USER: ${{ secrets.MAIL_USER }}
#           URLWATCH_EMAIL_PASS: ${{ secrets.MAIL_PASS }}
#         run: |
#           # 設定ディレクトリ作成
#           mkdir -p ~/.config/urlwatch

#           # 雛形をコピー
#           cp urlwatch.yaml ~/.config/urlwatch/urlwatch.yaml

#           # プレースホルダーを環境変数で一気に置換
#           sed -i \
#             -e 's|\${URLWATCH_EMAIL_USER}|'"$URLWATCH_EMAIL_USER"'|g' \
#             -e 's|\${URLWATCH_EMAIL_PASS}|'"$URLWATCH_EMAIL_PASS"'|g' \
#             ~/.config/urlwatch/urlwatch.yaml

#           # 監視リストをコピー
#           cp urls.yaml ~/.config/urlwatch/urls.yaml

#           # 差分あるものだけメール送信
#           urlwatch --config ~/.config/urlwatch/urlwatch.yaml \
#                    --urls   ~/.config/urlwatch/urls.yaml
# .github/workflows/urlwatch.yml
# .github/workflows/urlwatch.yml
# .github/workflows/urlwatch.yml
name: urlwatch

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: python -m pip install --upgrade urlwatch

      - name: Restore existing DB
        run: |
          if [ -f db/db.sqlite ]; then
            mkdir -p ~/.cache/urlwatch
            cp db/db.sqlite ~/.cache/urlwatch/db.sqlite
          fi

      - name: Run urlwatch
        env:
          URLWATCH_EMAIL_USER: ${{ secrets.MAIL_USER }}
          URLWATCH_EMAIL_PASS: ${{ secrets.MAIL_PASS }}
        run: |
          mkdir -p ~/.config/urlwatch
          cp urlwatch.yaml ~/.config/urlwatch/urlwatch.yaml
          sed -i \
            -e 's|\${URLWATCH_EMAIL_USER}|'"$URLWATCH_EMAIL_USER"'|g' \
            -e 's|\${URLWATCH_EMAIL_PASS}|'"$URLWATCH_EMAIL_PASS"'|g' \
            ~/.config/urlwatch/urlwatch.yaml
          cp urls.yaml ~/.config/urlwatch/urls.yaml
          urlwatch --config ~/.config/urlwatch/urlwatch.yaml \
                   --urls   ~/.config/urlwatch/urls.yaml

      - name: Copy DB back into repo
        run: |
          mkdir -p db
          # データベースの実ファイル名を確認してコピー
          if [ -f ~/.cache/urlwatch/db.sqlite ]; then
            cp ~/.cache/urlwatch/db.sqlite db/db.sqlite
          elif ls ~/.cache/urlwatch/db.sqlite* 1> /dev/null 2>&1; then
            cp ~/.cache/urlwatch/db.sqlite* db/db.sqlite
          else
            echo "No urlwatch DB found in ~/.cache/urlwatch"
          fi

      - name: Commit and push URLWatch DB
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add db/db.sqlite || echo "db/db.sqlite not tracked"
          git commit -m "Update urlwatch DB" || echo "Nothing to commit"
          git push
